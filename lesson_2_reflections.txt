Question: What happens when you initialize a repository? What do you need to do it?
- When you initialize a repository, the following happens:
-- .git is added to the directory (where history is recorded)
-- you can use this directory as a git repository
-- a branch (master branch) is created
-- no commit is yet created
-- a list of untracked files is given, but these are not yet part of the repository
- In order to be able to initialize a repository, you need:
-- a directory
-- git is installed
-- execute git init command

Question: What is the difference between Staging Area and 
Repository and Staging Area and Working Directory
- The Repository contains the commits, that is all the files (and their state) which are 
contained in the Staging Area
- The Staging Area on the other hand does only contain the files that the user selects 
in order to have them in the staging area so that these can be commited to the Repository
- This shows: The Staging Area contains a subset of the files of the Working Directory
- The Repository contains 'snapshots' of the state of the Staging Area, that is, 
of subsets of the Working Directory at a certain point in time
- What value does the Staging Area offer? 
1) It allows for keeping the commits as small as possible
2) I further need to investigate the difference

Question: How can you use the staging area to make sure you 
have one commit per logical change?
- I can add as many files and changes to the staging area until 
all part of the logical change have been added
- then I commit these changes together in one single commit
- so I can use the Staging Area as a pool for changes which belong to one single
logical change

Question: What are some situations when branches would be helpful in keeping your 
history organized? How would branches help?
- Situation 1: try out some new features which require some commits
- if changes are not satisfying, go back to master branch
- if changes are satisfying, merge them with master branch
- Situation 2: develop two similar versions in parallel
- In both situations, branches keep sets of commits separated 
